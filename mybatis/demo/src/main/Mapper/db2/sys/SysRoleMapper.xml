<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.krm.web.sys.mapper.SysRoleMapper">

    <sql id="sysRoleColumns">
        id,create_by,create_date,data_scope,del_flag,name,organ_id,remarks,update_by,update_date
    </sql>
    <sql id="sysRoleAliasColumns">
        sr.id,sr.create_by,sr.create_date,sr.data_scope,sr.del_flag,sr.name,sr.organ_id,
        sr.remarks,sr.update_by,sr.update_date
    </sql>

    <!-- 添加角色所在机构 -->
    <insert id="insertRoleOrgan">
        insert into sys_role_organ (id,role_Id,organ_id)
        select sys_guid(),#{id},code
        from sys_organ
        <where>
            code in(
            <foreach collection="organIds" index="index" item="organId" separator=",">
                #{organId,jdbcType=VARCHAR}
            </foreach>
            )
        </where>


    </insert>

    <!-- 添加角色绑定的用户 -->
    <insert id="insertUserRoleByRoleId">
        insert into sys_user_role (id,role_Id,user_id)
        select sys_guid(),#{id},id
        from sys_user
        <where>
            1=1
            <if test="@Ognl@isNotBlank(userIds)">
                and id in(
                <foreach collection="userIds" index="index" item="userId" separator=",">
                    #{userId,jdbcType=VARCHAR}
                </foreach>
                )
            </if>
        </where>
    </insert>

    <!-- 添加用户选择的角色 -->
    <insert id="insertUserRoleByUserId">
        insert into sys_user_role (id,user_id,role_Id)
        select sys_guid(),#{id},id
        from sys_role
        <where>
            id in(
            <foreach collection="roleIds" index="index" item="roleId" separator=",">
                #{roleId,jdbcType=VARCHAR}
            </foreach>
            )
        </where>
    </insert>

    <!-- 添加角色拥有的权限 -->
    <insert id="insertRoleMenu">
        insert into sys_role_menu (id,role_id,menu_id)
        select sys_guid(),#{id},id
        from sys_menu
        <where>
            id in(
            <foreach collection="menuIds" index="index" item="menuId" separator=",">
                #{menuId,jdbcType=VARCHAR}
            </foreach>
            )
        </where>
    </insert>

    <!-- 添加角色增删改查权限 -->
    <insert id="insertRolePermission">
        insert into
        SYS_ROLE_PERMISSION(ID,CAN_EXPORT,CAN_QUERY,MENU_ID,CAN_IMPORT,CAN_DELETE,CAN_ADD,BASE_PERMISSION,ROLE_ID,CAN_UPDATE)
        <foreach close=")" collection="list" item="record" index="index" open="(" separator="union">
            select
            #{record.id,jdbcType=VARCHAR},
            #{record.canExport,jdbcType=VARCHAR},
            #{record.canQuery,jdbcType=VARCHAR},
            #{record.menuId,jdbcType=VARCHAR},
            #{record.canImport,jdbcType=VARCHAR},
            #{record.canDelete,jdbcType=VARCHAR},
            #{record.canAdd,jdbcType=VARCHAR},
            #{record.basePermission,jdbcType=VARCHAR},
            #{record.roleId,jdbcType=VARCHAR},
            #{record.canUpdate,jdbcType=VARCHAR}
            from dual
        </foreach>
    </insert>

    <!-- 删除角色所在的机构 -->
    <delete id="deleteRoleOrganByRoleId">
        delete from sys_role_organ where role_id = #{roleId}
    </delete>

    <!-- 删除角色所绑定的用户 -->
    <delete id="deleteUserRoleByRoleId">
        delete from sys_user_role where role_id = #{roleId}
    </delete>

    <!--删除用户所属角色  -->
    <delete id="deleteUserRoleByUserId">
        delete from sys_user_role where user_id = #{userId}
    </delete>

    <!-- 删除角色拥有的权限 -->
    <delete id="deleteRoleMenuByRoleId">
        delete from sys_role_menu where role_id = #{roleId}
    </delete>

    <!-- 根据角色id查询拥有的机构id集合 -->
    <select id="findOrganIdsByRoleId" resultType="java.lang.String">
        select organ_id from sys_role_organ where role_id = #{roleId}
    </select>

    <!-- 根据角色id查找用户 -->
    <select id="findUserByRoleId" resultType="com.krm.web.sys.model.SysUser">
        select su.id,su.name from sys_user su left join sys_user_role sur
        on su.id = sur.user_id
        where sur.role_id = #{roleId}
    </select>

    <!-- 根据用户id查找角色 -->
    <select id="findUserRoleListByUserId" resultType="com.krm.web.sys.model.SysRole">
        SELECT sr.id,sr.name,sr.organ_id,sr.data_scope FROM sys_role sr
        LEFT JOIN sys_user_role sur ON sr.id=sur.role_id
        WHERE sur.user_id=#{userId}
    </select>

    <!-- 根据角色id查询拥有的资源id集合 -->
    <select id="findMenuIdsByRoleId" resultType="java.lang.String">
        select menu_id from sys_role_menu where role_id = #{roleId}
    </select>

    <!-- 根据角色id查找绑定用户ids -->
    <select id="findUserIdsByRoleId" resultType="java.lang.String">
        select user_id from sys_user_role where role_id = #{role_id}
    </select>

    <!-- 根据角色id查询绑定的资源 -->
    <select id="findMenuByRoleId" resultType="com.krm.web.sys.model.SysMenu">
        select sr.id,sr.name from sys_menu sr left join sys_role_menu rr
        on sr.id = rr.menu_id
        where role_id = #{roleId}
    </select>

    <!-- 分页查询角色 -->
    <select id="findPageInfo" resultType="com.krm.web.sys.model.SysRole">
        SELECT distinct sr.id,F_CHANGE_TO_DICT('sys_data_scope',sr.data_scope)
        data_scope,sr.name,sr.organ_id,sr.UPDATE_DATE,
        sr.remarks,so.name organ_name FROM sys_role sr
        LEFT JOIN sys_user_role sur ON sr.id=sur.role_id
        LEFT JOIN sys_organ so ON so.code=sr.organ_id
        <where>
            <if test="dataScope!=null and dataScope!=''">
                sr.data_scope = #{dataScope}
            </if>
            <if test="name!=null and name!=''">
                and sr.name like '%'||#{name}||'%'
            </if>
            <if test="organId!=null and organId !=0">
                and sr.organ_id = #{organId}
            </if>
            <if test="@Ognl@isNotBlank(remarks)">
                and sr.remarks = #{remarks}
            </if>
            <if test="@Ognl@isNotBlank(userDataScope)">
                and ${userDataScope}
            </if>
        </where>
        ORDER BY sr.update_date desc
    </select>

    <insert id="saveRole">
        insert into sys_role(<include refid="sysRoleColumns"/>)
        values(
        #{id,jdbcType=INTEGER},
        #{createBy,jdbcType=VARCHAR},
        #{createDate,jdbcType=DATE},
        #{dataScope,jdbcType=VARCHAR},
        #{delFlag,jdbcType=VARCHAR},
        #{name,jdbcType=VARCHAR},
        #{organId,jdbcType=INTEGER},
        #{remarks,jdbcType=VARCHAR},
        #{updateBy,jdbcType=VARCHAR},
        #{updateDate,jdbcType=DATE}
        )
    </insert>

    <!-- 删除角色拥有的权限 -->
    <delete id="deleteRolePermissionByRoleId">
        delete from sys_role_permission where role_id = #{roleId}
    </delete>

    <select id="queryRolePermissions" resultType="com.krm.web.sys.model.SysRolePermission">
        SELECT
        rm.ID,rm.ROLE_ID,rm.MENU_ID,rp.CAN_ADD,rp.CAN_DELETE,rp.CAN_UPDATE,rp.CAN_QUERY,rp.CAN_IMPORT,rp.CAN_EXPORT,
        m.PARENT_ID,m.NAME,m.URL base_permission FROM SYS_ROLE_MENU rm
        left join SYS_MENU m on rm.MENU_ID = m.ID
        left join sys_role_permission rp on rm.ROLE_ID = rp.ROLE_ID and rm.MENU_ID = rp.MENU_ID
        <where>
            rm.ROLE_ID = #{roleId}
        </where>
        order by m.SORT
    </select>

</mapper>
